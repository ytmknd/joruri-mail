## Joruri Mail v2.1.3 インストールマニュアル                2017.06.15

**********************************************************************
 1 想定環境
**********************************************************************

[システム]
OS           : CentOS 7.2 x86_64, CentOS 6.8 x86_64
Webサーバー  : Apache 2.4, Apache 2.2
DBシステム   : MySQL 5.6
Ruby         : 2.3
Rails        : 5.0
Mailサーバー : SMTP, IMAP4

[ネットワーク関連設定]
IPアドレス     : 192.168.0.2
メールドメイン : localhost.localdomain.jp

**********************************************************************
 2 CentOS のインストール
**********************************************************************

CentOSをインストールします。

※インストール完了後、ご利用になられる環境に合わせて適切なセキュリティ設定をお願いします。
CentOSに関するセキュリティ設定については、本マニュアルの範囲外となります。

rootユーザーに変更します。

  $ su -

**********************************************************************
 3 事前準備
**********************************************************************

必要なパッケージをインストールします。

  # yum -y install epel-release
  # yum -y install wget git

**********************************************************************
 4 Ruby のインストール
**********************************************************************

依存パッケージをインストールします。

  # yum -y install make gcc-c++ patch bzip2 openssl-devel libyaml-devel libffi-devel readline-devel zlib-devel gdbm-devel ncurses-devel

rbenvをインストールします。

  # git clone git://github.com/sstephenson/rbenv.git /usr/local/rbenv
  # git clone git://github.com/sstephenson/ruby-build.git /usr/local/rbenv/plugins/ruby-build

  # echo 'export RBENV_ROOT="/usr/local/rbenv"' >> /etc/profile.d/rbenv.sh
  # echo 'export PATH="${RBENV_ROOT}/bin:${PATH}"' >> /etc/profile.d/rbenv.sh
  # echo 'eval "$(rbenv init -)"' >> /etc/profile.d/rbenv.sh
  # source /etc/profile.d/rbenv.sh

rubyをインストールします。

  # rbenv install 2.3.1
  # rbenv global 2.3.1
  # rbenv rehash
  # ruby -v

bundler をインストールします。

  # gem install bundler -v 1.11.2

**********************************************************************
 5 Apache のインストール
**********************************************************************

Apacheをインストールします。

  # yum -y install httpd-devel

 設定ファイルを編集します。

  # vi /etc/httpd/conf/httpd.conf
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  ServerName 192.168.0.2    #変更
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

自動起動に設定します。

  # chkconfig httpd on        <- CentOS 6
  # systemctl enable httpd    <- CentOS 7

**********************************************************************
 6 Passenger のインストール
**********************************************************************

Passengerをインストールします。

  # yum -y install curl-devel
  # gem install passenger -v 5.0.30
  # passenger-install-apache2-module -a

**********************************************************************
 7 MySQL のインストール
**********************************************************************

MySQLをインストールします。

  # yum -y install http://dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm
  # yum -y install mysql-community-server

文字エンコーディングの標準を UTF-8 に設定します。

  # vi /etc/my.cnf
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  [mysqld]
  character-set-server=utf8     #追加
  
  [client]                      #追加（末尾に追加）
  default-character-set=utf8    #追加
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

MySQLを起動します。

  # /usr/bin/mysql_install_db --user=mysql
  # service mysqld start         <- CentOS 6
  # systemctl start mysqld       <- CentOS 7

自動起動に設定します。

  # chkconfig mysqld on

rootユーザーのパスワードを設定します。

  # /usr/bin/mysqladmin -u root password "pass"

**********************************************************************
 8 Joruri Mail のインストール
**********************************************************************

依存パッケージをインストールします。

  # yum -y install ImageMagick-devel libjpeg-devel libpng-devel librsvg2-devel libxml2-devel libxslt-devel mysql-devel openldap-devel shared-mime-info libicu-devel npm
  # npm install bower@1.7.9 -g

Joruriユーザーを作成します。

  # useradd -m joruri

DBユーザーを作成します。

  # /usr/bin/mysql -u root -ppass -e "grant all on *.* to joruri@localhost IDENTIFIED BY 'pass'"

ソースコードをダウンロードします。

  # mkdir /var/share
  # git clone https://github.com/joruri/joruri-mail.git /var/share/jorurimail
  # chown -R joruri:joruri /var/share/jorurimail

Joruriユーザーに変更します。

  # su - joruri
  $ cd /var/share/jorurimail

必要ライブラリをインストールします。

  $ bundle install --path vendor/bundle --without development test
  $ bundle exec rake bower:install RAILS_ENV=production

**********************************************************************
 9 Joruri Mail の設定
**********************************************************************

======================================================================
 9.1  設定ファイルの編集
======================================================================

サンプル設定ファイルをコピーします。

  $ cp /var/share/jorurimail/config/original/* /var/share/jorurimail/config/

基本設定を編集します。

  $ vi config/core.yml
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
  title  : Joruri Mail
  uri    : http://192.168.0.2/
  proxy  : ※プロキシ
  mail_domain: ※メールドメイン
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

  ※プロキシ
  プロキシサーバーが導入されている場合は  http://example:8080/ の様に記述してください。

DB, SMTP, IMAPサーバー接続情報を設定します。

  $ vi config/database.yml
  $ vi config/smtp.yml
  $ vi config/imap.yml

Joruri Gwへのシングルサインオン接続情報を設定します。（Joruri Gwと連携する場合）

  $ vi config/sso.yml

VirtualHostを設定します。

  $ vi config/virtual-hosts/jorurimail.conf

シークレットキーを設定します。

  $ bundle exec rake secret RAILS_ENV=production
    (出力されたシークレットキーをコピーします)
  $ vi config/secrets.yml
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  production:
    secret_key_base: (コピーしたシークレットキーを貼り付けます)
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

======================================================================
 9.2 データベースの作成
======================================================================

データベースを作成します。

  $ /usr/bin/mysql -u root -ppass -e "create database jorurimail"

テーブルを作成します。

  $ bundle exec rake db:schema:load RAILS_ENV=production

初期データを登録します。

  $ bundle exec rake db:seed RAILS_ENV=production

サンプルデータを登録します。

  $ bundle exec rake db:seed:demo RAILS_ENV=production

======================================================================
 9.3 assets のコンパイル
======================================================================

assetsをコンパイルします。

  $ bundle exec rake assets:precompile RAILS_ENV=production

======================================================================
 9.4 cron タスクの登録
======================================================================

cron タスクを登録します。

  $ bundle exec whenever -i -s 'environment=production'

cron タスクが登録されたことを確認します。

  $ crontab -l

======================================================================
 9.5 delayed_job の起動
======================================================================

delayed_job を起動します。

  $ bundle exec rake delayed_job:start RAILS_ENV=production

**********************************************************************
 10 サーバー起動
**********************************************************************

Apacheに設定を追加します。

  $ su -
  # cp /var/share/jorurimail/config/samples/passenger.conf /etc/httpd/conf.d/
  # ln -s /var/share/jorurimail/config/virtual-hosts/jorurimail.conf /etc/httpd/conf.d/jorurimail.conf

Apache を起動します。

  # service httpd configtest
  # service httpd start        <- CentOS 6
  # systemctl start httpd      <- CentOS 7

**********************************************************************
 11 画面確認
**********************************************************************

ここまでの手順で Joruri Mail の画面にアクセスできます。

  http://192.168.0.2/

次のユーザーが登録されています。

    管理者（システム管理者）
      ユーザーID   : admin
      パスワード : admin

    一般ユーザー（徳島　太郎）
      ユーザーID   : user1
      パスワード : user1

    一般ユーザー（阿波　花子）
      ユーザーID   : user2
      パスワード : user2

    一般ユーザー（吉野　三郎）
      ユーザーID   : user3
      パスワード : user3
